```
name: Schedule Progressive Deployment

on:
  workflow_dispatch:
    inputs:
      SERVICE_NAME:
        required: true
        type: string
      PROJECT_ID:
        required: true
        type: string
      REGION:
        required: true
        type: string
      TRAFFIC_SHIFT:
        required: true
        type: number
      CRON_PERIOD:
        required: true
        type: string
      ACTION:
        required: true
        type: choice
        options:
          - Install
          - Uninstall

jobs:
  schedule-deployment:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Authenticate to GKE (mock)
        run: echo "üîê Authenticate to GKE here (via Workload Identity or KUBECONFIG)"

      - name: Create Secret for GitHub Token
        if: ${{ inputs.ACTION == 'Install' }}
        run: |
          kubectl delete secret github-token-secret --ignore-not-found
          kubectl create secret generic github-token-secret \
            --from-literal=GITHUB_TOKEN=${{ secrets.GITHUB_TOKEN }}

      - name: Install CronJob
        if: ${{ inputs.ACTION == 'Install' }}
        run: |
          sed "s|{{CRON_SCHEDULE}}|${{ inputs.CRON_PERIOD }}|g;
               s|{{SERVICE_NAME}}|${{ inputs.SERVICE_NAME }}|g;
               s|{{PROJECT_ID}}|${{ inputs.PROJECT_ID }}|g;
               s|{{REGION}}|${{ inputs.REGION }}|g;
               s|{{TRAFFIC_SHIFT}}|${{ inputs.TRAFFIC_SHIFT }}|g;" \
            .github/k8s/trigger-bluegreen-cronjob.yaml | kubectl apply -f -

      - name: Uninstall CronJob
        if: ${{ inputs.ACTION == 'Uninstall' }}
        run: |
          kubectl delete cronjob progressive-bluegreen-cronjob --ignore-not-found










apiVersion: batch/v1
kind: CronJob
metadata:
  name: progressive-bluegreen-cronjob
spec:
  schedule: "{{CRON_SCHEDULE}}"
  jobTemplate:
    spec:
      template:
        spec:
          restartPolicy: OnFailure
          containers:
          - name: trigger-deploy
            image: curlimages/curl:latest
            command: ["/bin/sh", "-c"]
            args:
              - |
                echo "üì° Triggering Blue-Green Workflow via GitHub API..."

                curl -X POST https://api.github.com/repos/${GITHUB_REPOSITORY}/actions/workflows/bluegreen-progressive.yaml/dispatches \
                  -H "Authorization: token ${GITHUB_TOKEN}" \
                  -H "Accept: application/vnd.github.v3+json" \
                  -d '{
                    "ref": "main",
                    "inputs": {
                      "SERVICE_NAME": "{{SERVICE_NAME}}",
                      "PROJECT_ID": "{{PROJECT_ID}}",
                      "REGION": "{{REGION}}",
                      "TRAFFIC_SHIFT": "{{TRAFFIC_SHIFT}}"
                    }
                  }'
            env:
            - name: GITHUB_TOKEN
              valueFrom:
                secretKeyRef:
                  name: github-token-secret
                  key: GITHUB_TOKEN
            - name: GITHUB_REPOSITORY
              value: "your-org/your-repo" # Replace this!












# Assuming it‚Äôs reusable
on:
  workflow_call:
    inputs:
      SERVICE_NAME:
        required: true
        type: string
      PROJECT_ID:
        required: true
        type: string
      REGION:
        required: true
        type: string
      TRAFFIC_SHIFT:
        required: true
        type: number

jobs:
  bluegreen-rollout:
    runs-on: ubuntu-latest
    outputs:
      green_percent: ${{ steps.green_percent_output.outputs.value }}
    steps:
      # your blue-green rollout steps
      - name: Extract Green % (mock)
        id: green_percent_output
        run: echo "::set-output name=value::100"

  uninstall-scheduler:
    if: ${{ needs.bluegreen-rollout.outputs.green_percent == '100' }}
    uses: ./.github/workflows/progressive-scheduler.yml
    with:
      SERVICE_NAME: ${{ inputs.SERVICE_NAME }}
      PROJECT_ID: ${{ inputs.PROJECT_ID }}
      REGION: ${{ inputs.REGION }}
      TRAFFIC_SHIFT: ${{ inputs.TRAFFIC_SHIFT }}
      CRON_PERIOD: '*/5 * * * *'  # Not important for uninstall
      ACTION: Uninstall
    secrets: inherit




    - name: Uninstall Scheduler if Green is 100%
      if: ${{ env.GREEN_PERCENT == '100' }}
      run: |
        echo "üßπ Green is at 100%, removing Cron scheduler..."
        curl -X POST https://api.github.com/repos/${{ github.repository }}/actions/workflows/schedule-progressive.yaml/dispatches \
          -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
          -H "Accept: application/vnd.github.v3+json" \
          -d '{
            "ref": "main",
            "inputs": {
              "SERVICE_NAME": "${{ inputs.SERVICE_NAME }}",
              "PROJECT_ID": "${{ inputs.PROJECT_ID }}",
              "REGION": "${{ inputs.REGION }}",
              "TRAFFIC_SHIFT": "${{ inputs.TRAFFIC_SHIFT }}",
              "CRON_PERIOD": "* * * * *",
              "ACTION": "Uninstall"
            }
          }'




```
